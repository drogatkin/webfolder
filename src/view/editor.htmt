<form name="editor" method="POST" onsubmit="store()" action="@contextpath@@servletpath@/@pageservicename@" style="height:90%">
<div>Editing: @model.file@</div>
<input type="hidden" name="file" value="@model.file@">

<!--div>@.ui.field*(file,java.lang.Object^@model@)*@</div-->
@model.editor{@ace(
<pre id="editor">@model.content@</pre>
<input type="hidden" name="content">

<script src="@contextpath@/js/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
var editor = ace.edit("editor");
editor.setTheme("ace/theme/chrome");
makeJSONAjaxCall(window.location.origin+'@contextpath@/edit_modes.json', '', true, 
	     function(res) {
	         var n = document.forms.editor.file.value;
	         var dp = n.lastIndexOf('.');
	         if (dp > 0) {
	           n=n.substring(dp);
	           var mode = res[n];
	           //alert('mode '+mode+' for '+n+' in '+res);
	           //for (var i in res)
	             //alert(i);
	           if (mode)
	             editor.getSession().setMode(mode);
	         }
	     });
editor.setAutoScrollEditorIntoView(false)
editor.setOption('maxLines', 80)
editor.setReadOnly(@model.partial@)
editor.commands.addCommand({
    name: 'Save',
    bindKey: {win: "Ctrl-S", "mac": "Cmd-S"},
    exec: function(editor) {
        saveInBkgd()
    }
})

function store() {
  document.forms.editor.content.value = editor.getValue();
  return true;
} 
</script>
)@
@(
<script>
function store() {
   return !@model.partial@
}
document.addEventListener('keydown', e => {
  if (e.ctrlKey && e.key === 's') {
    e.preventDefault()
    saveInBkgd()
  }
});
</script>
<div style="margin:auto;width:100%;height:100%">@.ui.field*(content,java.lang.Object^@model@)*@</div>)@}@

<hr/>
<div>
<input type="submit" name="submit" value="Save">
&nbsp;
<a href="javascript:void(0)" onclick="saveInBkgd()" id="bkgUpl" >Save &amp; continue</a>
&nbsp;
@.ui.check*(as_text,java.lang.Object^@model@)*@ As text
@.ui.select*(eol_type,java.lang.Object^@model@)*@ EOL
&nbsp;
&nbsp;&nbsp;
<a href="@request.getHeader*(referer)*@">Discard</a>
</div>
</form>
<script>
var autosave_on = "@model.do_autosave@" // from server

function extra_actions(s, ctx) {
    document.querySelector('input[type=checkbox] + select').disabled=!document.querySelector('input[type=checkbox]').checked
    document.querySelector('input[type=checkbox]').addEventListener('change', e => {
        document.querySelector('input[type=checkbox] + select').disabled= !e.target.checked
    })
    if(document.addEventListener) document.addEventListener("visibilitychange", autosave)
}
function saveInBkgd() {
   // check if saving in progress and ignore
   if (!store())
      return
   getElement('status').style.visibility = 'hidden'
   var xhr = new XMLHttpRequest()
   var formData = new FormData(document.forms[0])
   formData.append('submit', 'Save');
   formData.append('$$background', 'true')
   xhr.open('POST', '@contextpath@@servletpath@/@pageservicename@', true);
   xhr.onload = function () {
      if (xhr.status === 200) {
          var resp = xhr.responseText
          if (resp && resp.trim() && resp != 'OK') {
          	showBkgStatus(resp)
          } else
             showBkgStatus()
       } else {
          showBkgStatus('An error occurred!')
       }
    }
    xhr.onerror = function () {
    	showBkgStatus('Network error')
    }
    document.getElementById('bkgUpl').innerHTML = 'Saving...';
    xhr.send(formData)
}

function showBkgStatus(msg) {
     document.getElementById('bkgUpl').innerHTML = 'Save &amp; continue'
     if (msg) {
     	getElement('status').classList.remove('#status')
         getElement('status').style.display = 'block'
         getElement('err_txt').innerHTML = msg
     } else
     	getElement('status').style.visibility = 'hidden'
}
   
function autosave() {

	if (autosave_on == 'true" && document.hidden) 
		saveInBkgd()
}
</script>
<div>&nbsp;</div>
<div>&nbsp;</div>
<div>&nbsp;</div>
	